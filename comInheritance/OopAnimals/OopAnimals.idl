// OopAnimals.idl : IDL source for OopAnimals
//

// This file will be processed by the MIDL tool to
// produce the type library (OopAnimals.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(3ed7993b-f7ac-45b3-b599-58013e62c5d5),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IAnimal : IDispatch
{
	[id(1), helpstring("Gets the number of legs")]
	HRESULT GetNumberOfLegs([out, retval] LONG* count);
};

[
	object,
	uuid(d6ddd458-09b9-4e55-9f24-fca4bc57f481),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IAnimalCrud : IDispatch
{
	[id(1), helpstring("create an animal")]
	HRESULT CreateAnimal([in] LONG type, [out, retval] IAnimal** animal);
};

[
	object,
	uuid(a918db88-a645-4102-9eb9-1461daf7a8d5),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IAnimal2 : IAnimal
{
	[id(2), helpstring("Gets the number of legs")]
	HRESULT SetNumberOfLegs([in] LONG count);

	[id(3), helpstring("returns true or false")]
	HRESULT SetCanSpeak([in] VARIANT_BOOL canSpeak);

	[id(4), helpstring("returns true or false")]
	HRESULT CanSpeak([out, retval] VARIANT_BOOL* result);
};
[
	uuid(66898145-113c-4862-8217-3a4202cb110f),
	version(1.0),
]
library OopAnimalsLib
{
	importlib("stdole2.tlb");
	[
		uuid(13a9848a-51e9-4767-85d2-0251cd6f1b20)
	]
	coclass Animal
	{
		[default] interface IAnimal2;
		interface IAnimal;
	};
	[
		uuid(12a0c852-16dc-4e15-9690-814439401017)
	]
	coclass AnimalCrud
	{
		[default] interface IAnimalCrud;
	};
};

import "shobjidl.idl";
import "shobjidl.idl";
import "shobjidl.idl";
